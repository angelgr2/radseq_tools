%\VignetteIndexEntry{RADseq_Tools_tutorial}
\documentclass{article}
\usepackage{Sweave}
\usepackage[utf8x]{inputenc} 
\title{A Tutorial for RADseq_Tools}
\author{Angel Rivera-Colon & Kira Long}
\setlength{\parindent}{0pt}

\begin{document}

\SweaveOpts{concordance=TRUE}


\begin{center}
\section*{\huge A Tutorial for RADseq\_Tools}
\subsection*{\Large Angel Rivera-Colon \& Kira Long}
\end{center}


\section{Introduction:}

Restriction site-Associated DNA sequencing (RADseq) is a modern genomic sequencing technique that has greatly advanced the field of population genomics. As a reduced representation-sequencing method, RADseq has decreased per-individual sequencing costs, making genome-wide studies more widely accessible to the research community (Catchen, et al. 2017). Additionally, it allows for the cost-effective sequencing and genotyping of multiple individuals, which is particularly important when discerning genetic variation in natural populations (Narum, et al. 2013). Moreover, RADseq’s compatibility with multiple genomic approaches, including phylogenomics, de novo population genomics, and genomic scans, have made it a key player in modern population genomics (Andrews, et al. 2016).
\bigbreak
Although RADseq studies require relatively little previous information on the genome of interest, the selection of restriction enzymes and its subsequent effect on marker density remains one of RADseq’s limiting factors (Lowry, et al. 2017). The selection of a poor enzyme can then lead to genome undersampling, resulting in low marker density, or oversampling, affecting the resulting downstream coverage. Based on this, we developed an \texttt{R} package pipeline for the exploratory analysis of RADseq data to guide researchers in planning their study and improving data quality. \texttt{RADseq\_tools} estimates important information for the initial experimental design, including number of cutsites, and marker density and distribution for different user-defined restriction enzyme sites and reference genomes. Even when the reference of interest is not available, the user can explore with available genomes in related taxa and use this information to extrapolate the marker properties for their experiments. In addition, this package can assist with determining the cost of a RADseq experiment by providing estimates of expected coverage, number of samples per lane, and required read throughput. 


\section{Getting started:}
\subsection{Verifying R version}
To run \emph{RADseq\_Tools}, make sure you have a recent \texttt{R} installation. The package was written using \texttt{R version 3.4.2}, but should work with versions above \texttt{3.1.0}. To verify the installed \texttt{R} version, use:
<<>>=
R.version.string
@

\subsection{Installation}
Install the \emph{RADseq\_Tools} package from \texttt{CRAN} using:

<<eval=FALSE>>=
install.packages("RADseq_Tools")
@

Load the package for use with:
<<eval=FALSE>>=
library(RADseq_Tools)
@

Alternatively, source the functions using:
<<>>=
source("./../R/Functions.R")
@

Additional information on the package can be found in:\\ \texttt{https://github.com/angelgr2/radseq\_tools}


\section{Tutorial:}

This brief guide will provide examples of all the package's basic functions and arguments. It uses a test dataset available with the package. It consist of a small FASTA file containing the first 100Kb of sequence of six Three Spine Stickleback (\emph{Gasterosteus aculeatus}) chromosomes.

\subsection{Load and process reference sequence}

To begin, we need to load the reference sequence into a \texttt{RADseq\_Tools} object. This new \texttt{sequence} object can then be used to search for restriction sites. Create a variable containing the path to the reference sequence.  
<<>>=
fasta_dir <- "./../inst/extdata/test_geno.fa.gz"
@
Because this test dataset is available with the package installation, it can also be obtained from the \texttt{extdata} by using:
<<eval=FALSE>>=
fasta_dir <- system.file("inst/extdata",
                         "test_geno.fa.gz", 
                         package = "RADseq_Tools")
@

This path variable is then the input of the \texttt{process\_fasta} function, which reads the file provided in the path, converting multi-line sequence objects into single line sequences. Sequences bellow 10kb are filtered and not included in the resulting sequences object. The output of the function is a vector containing the sequence strings for each of the chromosomes/scaffofds in the FASTA file. Here, we are creating the object \texttt{mySeqs} using the output of \textt{process\_fasta}, and displaying the first few nucleotides for each of the chromosomes. 
<<>>=
mySeqs <- process_fasta(fasta_dir, 10000)

substr(mySeqs, 1, 60)
@

\subsection{Find restriction sites in the reference sequences}
The first part of finding the restriction cutsite position is defining the query to be searched, the sequence of the restriction enzyme. The package data contains sequences for four commonly used restriction enzymes stored in a vector called \texttt{renz}. They can be accesed in the following way:
<<>>=
data(renz)
renz
@

In this example, we are using the enzyme \texttt{SbfI}, which cuts at the sequence \texttt{CCTGCAGG}.
<<>>=
SbfI <- renz["sbfI"]
SbfI
@
Once the restriction site sequence is defined, it will be searched in the stored sequences using the \texttt{find\_cuts} function. Using \texttt{gregexpr}, it will find all matches of the restriction site query in the reference sequences. The resulting output is a list of vectors, containing all the per-chromosome/scaffold match positions.
\bigbreak
Here, we see the cutsite position for the first three test sequences:

<<>>=
myCuts <- find_cuts(mySeqs, SbfI)

myCuts[c(1,2,3)]
@

\subsection{Find cutsite distribution}
After determining the position of the cutsites, it is also important to determine the distribution of cutsites in the genome, as it gives us an idea of the number of cutsites and the average inter-cutsite distance. The distribution can be calculated using the \texttt{cutsite\_distance} function. Using the cutsite position list resulting from the \texttt{find\_cuts} function, it will output a single vector containing the inter-cutsite distance for all cutsites in the genome.
<<>>=
cutDist <- cutsite_distance(myCuts)
cutDist[1:10]
@
The resulting vector is compatible with all \texttt{R} vector functions, thus other statistical measures can be obtained. For example:
<<fig=TRUE>>=
summary(cutDist)
hist(cutDist, xlab="Distance (bp)", 
     ylab="Frequency", main="Cutsite distance distribution" )
@

\subsection{Find number of cutsites}
In addition to finding the inter-cutsite distance distribution, we can also determine the total number of cutsites using the \texttt{number\_cutsites} functions. It takes as input the original cutsite positions object product of the \texttt{find\_cuts} function, and outputs a single numeric value.
<<>>=
nCuts <- number_cutsites(myCuts)
nCuts
@
Alternatively, the number of cutsites can be manually calculated from the length of the cutsite distribution object.
<<>>=
length(cutDist)
@

\subsection{Estimate per-sample coverage}
Using the estimations of cutsite distribution, the user can estimate the expected per-sample coverage when running a sequencing experiment using the \texttt{Per\_Sample\_Coverage} function. The function requires the number of cutsites (likely calculated with the \texttt{number\_cutsites} function), number of samples, and the type of sequencing machine used, either Illumina HiSeq2500 (\texttt{"hiseq2500"}) or HiSeq4000 (\texttt{"hiseq4000"}) with their corresponding read throughput. These can be accessed throught the \texttt{illumina} dataset available with the package.
<<>>=
data(illumina)
hiseq2500
hiseq4000
@

The output is a vector contaning the estimated per-sample coverage for the machine's low, medium and high read throughput. Here's an example:
<<>>=
nCuts <- 35000     # Number of cutsites.
nSams <- 96        # Number of multiplexed samples 
illumina <- "hiseq2500"
Per_Sample_Coverage(nCuts, nSams, illumina)
illumina <- "hiseq4000"
Per_Sample_Coverage(nCuts, nSams, illumina)
@

\subsection{Estimate samples per lane}
The package can also be used to calculate an estimation of the number of samples that can be sequenced in a single Illumina sequencing lane for a given coverage. The function works similarly to \texttt{Per\_Sample\_Coverage}, as it takes the number of cutsites, a desired target coverage, and a type of Illumina sequencing machine. It outputs a vector containing calculated number of samples for the machine's low, medium and high read throughputs.
<<>>=
nCuts <- 35000     # Number of cutsites.   
cover <- 45        # Target per-sample average coverage
illumina <- "hiseq2500"
Samples_Per_Lane(nCuts, cover, illumina)
illumina <- "hiseq4000"
Samples_Per_Lane(nCuts, cover, illumina)
@

\subsection{Estimate required sequencing reads}
Given a fixed number of cutsites, number of samples, and target per-sample coverage, the \texttt{DNA\_Reads\_Per\_Lane} function calculates an estimate of the required number of reads. It can be used to determine the type of sequencing machine, and number of sequencing lanes, necessary for the experiment.
<<>>=
nCuts <- 35000     # Number of cutsites.
nSams <- 96        # Number of multiplexed samples 
cover <- 45        # Target per-sample average coverage
DNA_Reads_Per_Lane(nCuts, nSams, cover)
@



\section{Other applications:}
An important application of the \texttt{RADseq\_Tools} package is to compare the use of different datasets made with different restriction enzymes. The purpose of this application is to assist in the experimental design of RADseq projects, as choosing the right enzyme is fundamental for the success of the experiment. 
\bigbreak
To begin, we will process the test reference genome as before, storing the sequences in the \texttt{mySeqs} object. 
<<>>=
fasta_dir <- "./../inst/extdata/test_geno.fa.gz"
mySeqs <- process_fasta(fasta_dir, 10000)
@

After storing the sequences, we will find cutsites using three different restriction enzymes: \texttt{SbfI}, \texttt{EcoRI} and \texttt{HindIII}. The cutsite sequences are available in the \texttt{renz} vector. 
<<>>=
# For SbfI
SbfI <- renz["sbfI"]
SbfI_Cuts <- find_cuts(mySeqs, SbfI)
SbfI_Dist <- cutsite_distance(SbfI_Cuts)
SbfI_num <- number_cutsites(SbfI_Cuts)
@
<<>>=
# For EcoRI
EcoRI <- renz["ecoRI"]
EcoRI_Cuts <- find_cuts(mySeqs, EcoRI)
EcoRI_Dist <- cutsite_distance(EcoRI_Cuts)
EcoRI_num <- number_cutsites(EcoRI_Cuts)
@
<<>>=
# For HindIII
HindIII <- renz["hindIII"]
HindIII_Cuts <- find_cuts(mySeqs, HindIII)
HindIII_Dist <- cutsite_distance(HindIII_Cuts)
HindIII_num <- number_cutsites(HindIII_Cuts)
@

By displaying the cutsites for just the first chromosome/scaffold, we can see that the cutsite positions in the genome for each enzyme is different for each enzyme:
<<>>=
SbfI_Cuts[[1]]
EcoRI_Cuts[[1]]
HindIII_Cuts[[1]]
@

Also, the total number of cutsites is different:
<<>>=
SbfI_num
EcoRI_num
HindIII_num
@

And have completely different inter-cutsite distance distributions:
<<fig=TRUE>>=
boxplot(SbfI_Dist, EcoRI_Dist, HindIII_Dist,
        names = c("SbfI", "EcoRI", "HindIII"),
        xlab="Restriction enzyme used",
        ylab="Inter-cutsite distance (bp)",
        main="Comparison of cutsite distributions")
@

With this information, the user can have an idea of how the different enzymes behave in the reference genome of interest, or related genomes. Based on this information, the user can then decide which enzyme to use based on marker desity and raw number of sites, among other variables. 

\section{References:}


\footnotesize Andrews, K. R., Good, J. M., Miller, M. R., Luikart, G., \& Hohenlohe, P. A. (2016). Harnessing the power of RADseq for ecological and evolutionary genomics. \emph{Nature Reviews. Genetics}, 17(2), 81–92. doi.org/10.1038/nrg.2015.28
\bigbreak
\footnotesize Catchen, J. M., Hohenlohe, P. A., Bernatchez, L., Funk, W. C., Andrews, K. R. and Allendorf, F. W. (2017), Unbroken: RADseq remains a powerful tool for understanding the genetics of adaptation in natural populations. \emph{Mol Ecol Resour}, 17: 362–365. doi:10.1111/1755-0998.12669
\bigbreak
\footnotesize Lowry DB, Hoban S, Kelley JL, et al. (2017). Responsible RAD: Striving for best practices in population genomic studies of adaptation. \emph{Mol Ecol Resour}. 17:366–369. doi.org/10.1111/1755-0998.12677
\bigbreak
\footnotesize Narum, S. R., Buerkle, C. A., Davey, J. W., Miller, M. R. and Hohenlohe, P. A. (2013), Genotyping-by-sequencing in ecological and conservation genomics. \emph{Molecular Ecology}, 22: 2841–2847. doi: 10.1111/mec.12350



\end{document}